class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n, V, comps, cnt = len(graph), set(), {}, 0
        
        def dfs(node, i):
            comps[node] = i
            V.add(node)
            for neib in range(n):
                if graph[node][neib] == 0 or neib in V: continue
                dfs(neib, i)
        
        for i in range(n):
            if i not in V:
                dfs(i, cnt)
                cnt += 1
                
        sizes = Counter(comps.values())
                
        comps_count = Counter()
        for node in initial:
            comps_count[comps[node]] += 1
            
        ans = (n + 1, float("inf"))
                
        for node in initial:
            c = comps[node]
            if comps_count[c] != 1: continue
            ans = min(ans, (-sizes[c], node))
            
        return ans[1] if ans[1] != float("inf") else min(initial)
        
        
        